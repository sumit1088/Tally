version: 2.1

executors:
  docker-executor:
    docker:
      - image: cimg/python:3.11
    working_directory: ~/repo

jobs:
  build-and-init:
    executor: docker-executor
    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Copy .env if needed
          command: cp .env.example .env || echo ".env already exists"

      - run:
          name: Build and start all services
          command: |
            docker-compose -f docker-compose.yml -f docker-compose-db.yml up -d --build

      - run:
          name: Wait for PostgreSQL to be healthy
          command: |
            CONTAINER_ID=$(docker-compose ps -q db)
            if [ -z "$CONTAINER_ID" ]; then
              echo "ERROR: Could not find 'db' container. Check docker-compose configuration."
              docker-compose ps
              docker-compose logs db || true
              exit 1
            fi

            echo "Checking DB health status..."
            for i in {1..30}; do
              STATUS=$(docker inspect --format='{{.State.Health.Status}}' "$CONTAINER_ID" 2>/dev/null || echo "unavailable")
              echo "DB container health: $STATUS"
              if [ "$STATUS" = "healthy" ]; then
                echo "Postgres is healthy."
                break
              fi
              sleep 2
            done

            if [ "$STATUS" != "healthy" ]; then
              echo "Postgres failed to start in time. Dumping logs:"
              docker-compose logs db || true
              exit 1
            fi


      - run:
          name: Show init-db logs (run_init.py)
          command: docker-compose logs init-db

      - run:
          name: Check FastAPI is up
          command: |
            curl --fail http://localhost:8030/docs || (echo "FastAPI not reachable" && exit 1)

      - run:
          name: Shut down containers
          command: docker-compose -f docker-compose.yml -f docker-compose-db.yml down

workflows:
  version: 2
  test:
    jobs:
      - build-and-init
